on: [push]

name: build

jobs:
  build:
    name: Rust build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: check system
        run: |
          lscpu && free -h

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            server/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: install stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build

  docker_centos7:
    name: docker build using centos7
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: check system
        run: |
          lscpu && free -h

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Cache docker image
        uses: actions/cache@v3
        with:
          path: |
            ./*.tar
          key: docker-images-${{ hashFiles('docker/Dockerfile.builder') }}
          restore-keys: docker-images-

      - name: Docker build
        run: |
          make docker_build
          make docker_extract

      # - uses: "marvinpinto/action-automatic-releases@latest"
      #   with:
      #     repo_token: "${{ secrets.GITHUB_TOKEN }}"
      #     prerelease: false
      #     title: "prs binary, for x86_centos7"
      #     files: |
      #       ./prs
